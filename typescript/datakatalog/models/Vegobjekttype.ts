/* tslint:disable */
/* eslint-disable */
/**
 * NVDB Datakatalog API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v1
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime'
import type { Egenskapstype } from './Egenskapstype'
import {
  EgenskapstypeFromJSON,
  EgenskapstypeFromJSONTyped,
  EgenskapstypeToJSON,
} from './Egenskapstype'
import type { Relasjonstyper } from './Relasjonstyper'
import {
  RelasjonstyperFromJSON,
  RelasjonstyperFromJSONTyped,
  RelasjonstyperToJSON,
} from './Relasjonstyper'
import type { Stedfesting } from './Stedfesting'
import {
  StedfestingFromJSON,
  StedfestingFromJSONTyped,
  StedfestingToJSON,
} from './Stedfesting'
import type { VegobjektKategori } from './VegobjektKategori'
import {
  VegobjektKategoriFromJSON,
  VegobjektKategoriFromJSONTyped,
  VegobjektKategoriToJSON,
} from './VegobjektKategori'

/**
 *
 * @export
 * @interface Vegobjekttype
 */
export interface Vegobjekttype {
  /**
   *
   * @type {number}
   * @memberof Vegobjekttype
   */
  id: number
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  navn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  kortnavn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  beskrivelse?: string
  /**
   *
   * @type {Stedfesting}
   * @memberof Vegobjekttype
   */
  stedfesting?: Stedfesting
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  sosinavn?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  sosinvdbnavn?: string
  /**
   *
   * @type {number}
   * @memberof Vegobjekttype
   */
  sorteringsnummer: number
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  status?: string
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  hovedkategori?: string
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  tidsromRelevant: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  konnekteringslenkeOk?: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  abstraktType: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  avledet: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  mHaMor: boolean
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  enVersjon: boolean
  /**
   *
   * @type {string}
   * @memberof Vegobjekttype
   */
  tilleggsinformasjon?: string
  /**
   *
   * @type {Array<VegobjektKategori>}
   * @memberof Vegobjekttype
   */
  kategorier: Array<VegobjektKategori>
  /**
   *
   * @type {Array<Egenskapstype>}
   * @memberof Vegobjekttype
   */
  egenskapstyper?: Array<Egenskapstype>
  /**
   *
   * @type {Relasjonstyper}
   * @memberof Vegobjekttype
   */
  relasjonstyper?: Relasjonstyper
  /**
   *
   * @type {boolean}
   * @memberof Vegobjekttype
   */
  sensitiv: boolean
}

/**
 * Check if a given object implements the Vegobjekttype interface.
 */
export function instanceOfVegobjekttype(value: object): boolean {
  let isInstance = true
  isInstance = isInstance && 'id' in value
  isInstance = isInstance && 'sorteringsnummer' in value
  isInstance = isInstance && 'tidsromRelevant' in value
  isInstance = isInstance && 'abstraktType' in value
  isInstance = isInstance && 'avledet' in value
  isInstance = isInstance && 'mHaMor' in value
  isInstance = isInstance && 'enVersjon' in value
  isInstance = isInstance && 'kategorier' in value
  isInstance = isInstance && 'sensitiv' in value

  return isInstance
}

export function VegobjekttypeFromJSON(json: any): Vegobjekttype {
  return VegobjekttypeFromJSONTyped(json, false)
}

export function VegobjekttypeFromJSONTyped(
  json: any,
  ignoreDiscriminator: boolean,
): Vegobjekttype {
  if (json === undefined || json === null) {
    return json
  }
  return {
    id: json['id'],
    navn: !exists(json, 'navn') ? undefined : json['navn'],
    kortnavn: !exists(json, 'kortnavn') ? undefined : json['kortnavn'],
    beskrivelse: !exists(json, 'beskrivelse') ? undefined : json['beskrivelse'],
    stedfesting: !exists(json, 'stedfesting')
      ? undefined
      : StedfestingFromJSON(json['stedfesting']),
    sosinavn: !exists(json, 'sosinavn') ? undefined : json['sosinavn'],
    sosinvdbnavn: !exists(json, 'sosinvdbnavn')
      ? undefined
      : json['sosinvdbnavn'],
    sorteringsnummer: json['sorteringsnummer'],
    status: !exists(json, 'status') ? undefined : json['status'],
    hovedkategori: !exists(json, 'hovedkategori')
      ? undefined
      : json['hovedkategori'],
    tidsromRelevant: json['tidsrom_relevant'],
    konnekteringslenkeOk: !exists(json, 'konnekteringslenke_ok')
      ? undefined
      : json['konnekteringslenke_ok'],
    abstraktType: json['abstrakt_type'],
    avledet: json['avledet'],
    mHaMor: json['må_ha_mor'],
    enVersjon: json['en_versjon'],
    tilleggsinformasjon: !exists(json, 'tilleggsinformasjon')
      ? undefined
      : json['tilleggsinformasjon'],
    kategorier: (json['kategorier'] as Array<any>).map(
      VegobjektKategoriFromJSON,
    ),
    egenskapstyper: !exists(json, 'egenskapstyper')
      ? undefined
      : (json['egenskapstyper'] as Array<any>).map(EgenskapstypeFromJSON),
    relasjonstyper: !exists(json, 'relasjonstyper')
      ? undefined
      : RelasjonstyperFromJSON(json['relasjonstyper']),
    sensitiv: json['sensitiv'],
  }
}

export function VegobjekttypeToJSON(value?: Vegobjekttype | null): any {
  if (value === undefined) {
    return undefined
  }
  if (value === null) {
    return null
  }
  return {
    id: value.id,
    navn: value.navn,
    kortnavn: value.kortnavn,
    beskrivelse: value.beskrivelse,
    stedfesting: StedfestingToJSON(value.stedfesting),
    sosinavn: value.sosinavn,
    sosinvdbnavn: value.sosinvdbnavn,
    sorteringsnummer: value.sorteringsnummer,
    status: value.status,
    hovedkategori: value.hovedkategori,
    tidsrom_relevant: value.tidsromRelevant,
    konnekteringslenke_ok: value.konnekteringslenkeOk,
    abstrakt_type: value.abstraktType,
    avledet: value.avledet,
    må_ha_mor: value.mHaMor,
    en_versjon: value.enVersjon,
    tilleggsinformasjon: value.tilleggsinformasjon,
    kategorier: (value.kategorier as Array<any>).map(VegobjektKategoriToJSON),
    egenskapstyper:
      value.egenskapstyper === undefined
        ? undefined
        : (value.egenskapstyper as Array<any>).map(EgenskapstypeToJSON),
    relasjonstyper: RelasjonstyperToJSON(value.relasjonstyper),
    sensitiv: value.sensitiv,
  }
}
